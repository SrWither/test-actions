name: Deploy Nightly

on:
  schedule:
    - cron: '0 2 * * *'

jobs:
  build:
    name: Release - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: FreeBSD-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-freebsd
            bin: rs
            name: rs-freebsd-x86_64
            command: build

          - release_for: Linux-x86_64-gnu
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin: rs
            name: rs-linux-gnu-x86_64
            command: build

          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: rs.exe
            name: rs-windows-x86_64
            command: both

          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: rs
            name: rs-darwin-x86_64
            command: both


    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--release"
          strip: true
      - name: Create ZIP (Windows)
        if: matrix.platform.os == 'windows-latest'
        run: |
          Compress-Archive -Path target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }} -Destination ${{ matrix.platform.name }}.zip
          if (!(Test-Path -Path "builds")) {
            New-Item -ItemType Directory -Path "builds"
          }
          Move-Item -Path ${{ matrix.platform.name }}.zip -Destination "builds/"
      
      - name: Create ZIP (Posix)
        if: matrix.platform.os != 'windows-latest'
        run: |
          zip -r ${{ matrix.platform.name }}.zip target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
          mkdir -p builds
          mv ${{ matrix.platform.name }}.zip builds/
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: nightly-builds
          path: builds/${{ matrix.platform.name }}.zip
          retention-days: 1

  deploy:
    name: Deploy Nightly
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: nightly-builds
          path: builds
      - name: Update Nightly Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          name: 'Deploy Nightly $$'
          prerelease: true
          body: 'TODO: Add nightly release notes'
          files: |
            ./builds/*.zip
